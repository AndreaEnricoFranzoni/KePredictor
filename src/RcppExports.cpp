// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// KE_1d
Rcpp::List KE_1d(Rcpp::NumericMatrix X, std::string id_algo, Rcpp::Nullable<IntegerVector> k_vec, double toll, Rcpp::Nullable<int> min_size_ts, Rcpp::Nullable<int> max_size_ts, Rcpp::Nullable<int> num_threads, Rcpp::Nullable<std::string> id_rem_nan);
RcppExport SEXP _KePredictor_KE_1d(SEXP XSEXP, SEXP id_algoSEXP, SEXP k_vecSEXP, SEXP tollSEXP, SEXP min_size_tsSEXP, SEXP max_size_tsSEXP, SEXP num_threadsSEXP, SEXP id_rem_nanSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type X(XSEXP);
    Rcpp::traits::input_parameter< std::string >::type id_algo(id_algoSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<IntegerVector> >::type k_vec(k_vecSEXP);
    Rcpp::traits::input_parameter< double >::type toll(tollSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<int> >::type min_size_ts(min_size_tsSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<int> >::type max_size_ts(max_size_tsSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<int> >::type num_threads(num_threadsSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<std::string> >::type id_rem_nan(id_rem_nanSEXP);
    rcpp_result_gen = Rcpp::wrap(KE_1d(X, id_algo, k_vec, toll, min_size_ts, max_size_ts, num_threads, id_rem_nan));
    return rcpp_result_gen;
END_RCPP
}
// KEI_1d
Rcpp::List KEI_1d(Rcpp::NumericMatrix X, std::string id_algo, Rcpp::Nullable<IntegerVector> k_vec, double toll, Rcpp::Nullable<int> min_size_ts, Rcpp::Nullable<int> max_size_ts, Rcpp::Nullable<int> num_threads, Rcpp::Nullable<std::string> id_rem_nan);
RcppExport SEXP _KePredictor_KEI_1d(SEXP XSEXP, SEXP id_algoSEXP, SEXP k_vecSEXP, SEXP tollSEXP, SEXP min_size_tsSEXP, SEXP max_size_tsSEXP, SEXP num_threadsSEXP, SEXP id_rem_nanSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type X(XSEXP);
    Rcpp::traits::input_parameter< std::string >::type id_algo(id_algoSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<IntegerVector> >::type k_vec(k_vecSEXP);
    Rcpp::traits::input_parameter< double >::type toll(tollSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<int> >::type min_size_ts(min_size_tsSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<int> >::type max_size_ts(max_size_tsSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<int> >::type num_threads(num_threadsSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<std::string> >::type id_rem_nan(id_rem_nanSEXP);
    rcpp_result_gen = Rcpp::wrap(KEI_1d(X, id_algo, k_vec, toll, min_size_ts, max_size_ts, num_threads, id_rem_nan));
    return rcpp_result_gen;
END_RCPP
}
// KE_2d
Rcpp::List KE_2d(Rcpp::NumericMatrix X, std::string id_algo, int k, double threshold_ppc, Rcpp::Nullable<IntegerVector> k_vec, double toll, int num_disc_ev_x1, int num_disc_ev_x2, Rcpp::Nullable<int> min_size_ts, Rcpp::Nullable<int> max_size_ts, Rcpp::Nullable<int> num_threads, Rcpp::Nullable<std::string> id_rem_nan);
RcppExport SEXP _KePredictor_KE_2d(SEXP XSEXP, SEXP id_algoSEXP, SEXP kSEXP, SEXP threshold_ppcSEXP, SEXP k_vecSEXP, SEXP tollSEXP, SEXP num_disc_ev_x1SEXP, SEXP num_disc_ev_x2SEXP, SEXP min_size_tsSEXP, SEXP max_size_tsSEXP, SEXP num_threadsSEXP, SEXP id_rem_nanSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type X(XSEXP);
    Rcpp::traits::input_parameter< std::string >::type id_algo(id_algoSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    Rcpp::traits::input_parameter< double >::type threshold_ppc(threshold_ppcSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<IntegerVector> >::type k_vec(k_vecSEXP);
    Rcpp::traits::input_parameter< double >::type toll(tollSEXP);
    Rcpp::traits::input_parameter< int >::type num_disc_ev_x1(num_disc_ev_x1SEXP);
    Rcpp::traits::input_parameter< int >::type num_disc_ev_x2(num_disc_ev_x2SEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<int> >::type min_size_ts(min_size_tsSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<int> >::type max_size_ts(max_size_tsSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<int> >::type num_threads(num_threadsSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<std::string> >::type id_rem_nan(id_rem_nanSEXP);
    rcpp_result_gen = Rcpp::wrap(KE_2d(X, id_algo, k, threshold_ppc, k_vec, toll, num_disc_ev_x1, num_disc_ev_x2, min_size_ts, max_size_ts, num_threads, id_rem_nan));
    return rcpp_result_gen;
END_RCPP
}
// KEI_2d
Rcpp::List KEI_2d(Rcpp::NumericMatrix X, std::string id_algo, int k, double threshold_ppc, Rcpp::Nullable<IntegerVector> k_vec, double toll, int num_disc_ev_x1, int num_disc_ev_x2, Rcpp::Nullable<int> min_size_ts, Rcpp::Nullable<int> max_size_ts, Rcpp::Nullable<int> num_threads, Rcpp::Nullable<std::string> id_rem_nan);
RcppExport SEXP _KePredictor_KEI_2d(SEXP XSEXP, SEXP id_algoSEXP, SEXP kSEXP, SEXP threshold_ppcSEXP, SEXP k_vecSEXP, SEXP tollSEXP, SEXP num_disc_ev_x1SEXP, SEXP num_disc_ev_x2SEXP, SEXP min_size_tsSEXP, SEXP max_size_tsSEXP, SEXP num_threadsSEXP, SEXP id_rem_nanSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type X(XSEXP);
    Rcpp::traits::input_parameter< std::string >::type id_algo(id_algoSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    Rcpp::traits::input_parameter< double >::type threshold_ppc(threshold_ppcSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<IntegerVector> >::type k_vec(k_vecSEXP);
    Rcpp::traits::input_parameter< double >::type toll(tollSEXP);
    Rcpp::traits::input_parameter< int >::type num_disc_ev_x1(num_disc_ev_x1SEXP);
    Rcpp::traits::input_parameter< int >::type num_disc_ev_x2(num_disc_ev_x2SEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<int> >::type min_size_ts(min_size_tsSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<int> >::type max_size_ts(max_size_tsSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<int> >::type num_threads(num_threadsSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<std::string> >::type id_rem_nan(id_rem_nanSEXP);
    rcpp_result_gen = Rcpp::wrap(KEI_2d(X, id_algo, k, threshold_ppc, k_vec, toll, num_disc_ev_x1, num_disc_ev_x2, min_size_ts, max_size_ts, num_threads, id_rem_nan));
    return rcpp_result_gen;
END_RCPP
}
// data_2d_wrapper_from_list_ke
Rcpp::NumericMatrix data_2d_wrapper_from_list_ke(Rcpp::List Xt);
RcppExport SEXP _KePredictor_data_2d_wrapper_from_list_ke(SEXP XtSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type Xt(XtSEXP);
    rcpp_result_gen = Rcpp::wrap(data_2d_wrapper_from_list_ke(Xt));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_KePredictor_KE_1d", (DL_FUNC) &_KePredictor_KE_1d, 8},
    {"_KePredictor_KEI_1d", (DL_FUNC) &_KePredictor_KEI_1d, 8},
    {"_KePredictor_KE_2d", (DL_FUNC) &_KePredictor_KE_2d, 12},
    {"_KePredictor_KEI_2d", (DL_FUNC) &_KePredictor_KEI_2d, 12},
    {"_KePredictor_data_2d_wrapper_from_list_ke", (DL_FUNC) &_KePredictor_data_2d_wrapper_from_list_ke, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_KePredictor(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
