// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// KE
Rcpp::List KE(Rcpp::NumericMatrix X, Rcpp::Nullable<IntegerVector> k_vec, double toll, Rcpp::Nullable<int> min_size_ts, Rcpp::Nullable<int> max_size_ts, Rcpp::Nullable<int> num_threads, Rcpp::Nullable<std::string> id_rem_nan);
RcppExport SEXP _KePredictor_KE(SEXP XSEXP, SEXP k_vecSEXP, SEXP tollSEXP, SEXP min_size_tsSEXP, SEXP max_size_tsSEXP, SEXP num_threadsSEXP, SEXP id_rem_nanSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type X(XSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<IntegerVector> >::type k_vec(k_vecSEXP);
    Rcpp::traits::input_parameter< double >::type toll(tollSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<int> >::type min_size_ts(min_size_tsSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<int> >::type max_size_ts(max_size_tsSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<int> >::type num_threads(num_threadsSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<std::string> >::type id_rem_nan(id_rem_nanSEXP);
    rcpp_result_gen = Rcpp::wrap(KE(X, k_vec, toll, min_size_ts, max_size_ts, num_threads, id_rem_nan));
    return rcpp_result_gen;
END_RCPP
}
// KEI
Rcpp::List KEI(Rcpp::NumericMatrix X, Rcpp::Nullable<IntegerVector> k_vec, double toll, Rcpp::Nullable<int> min_size_ts, Rcpp::Nullable<int> max_size_ts, Rcpp::Nullable<int> num_threads, Rcpp::Nullable<std::string> id_rem_nan);
RcppExport SEXP _KePredictor_KEI(SEXP XSEXP, SEXP k_vecSEXP, SEXP tollSEXP, SEXP min_size_tsSEXP, SEXP max_size_tsSEXP, SEXP num_threadsSEXP, SEXP id_rem_nanSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type X(XSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<IntegerVector> >::type k_vec(k_vecSEXP);
    Rcpp::traits::input_parameter< double >::type toll(tollSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<int> >::type min_size_ts(min_size_tsSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<int> >::type max_size_ts(max_size_tsSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<int> >::type num_threads(num_threadsSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<std::string> >::type id_rem_nan(id_rem_nanSEXP);
    rcpp_result_gen = Rcpp::wrap(KEI(X, k_vec, toll, min_size_ts, max_size_ts, num_threads, id_rem_nan));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_KePredictor_KE", (DL_FUNC) &_KePredictor_KE, 7},
    {"_KePredictor_KEI", (DL_FUNC) &_KePredictor_KEI, 7},
    {NULL, NULL, 0}
};

RcppExport void R_init_KePredictor(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
